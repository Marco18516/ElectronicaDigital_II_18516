

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 19:58:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  000B                     _INTCON	set	11
   215  0009                     _PORTE	set	9
   216  0007                     _PORTC	set	7
   217  0006                     _PORTB	set	6
   218  0009                     _PORTEbits	set	9
   219  0001                     _TMR0	set	1
   220  001E                     _ADRESH	set	30
   221  001F                     _ADCON0bits	set	31
   222  0005                     _PORTA	set	5
   223  0006                     _PORTBbits	set	6
   224  000B                     _INTCONbits	set	11
   225  0008                     _PORTD	set	8
   226  000C                     _PIR1bits	set	12
   227  001F                     _ADCON0	set	31
   228  005A                     _TMR0IF	set	90
   229  0096                     _IOCB	set	150
   230  0081                     _OPTION_REG	set	129
   231  0089                     _TRISE	set	137
   232  0086                     _TRISB	set	134
   233  0085                     _TRISA	set	133
   234  0088                     _TRISD	set	136
   235  008C                     _PIE1bits	set	140
   236  009F                     _ADCON1	set	159
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239                           
   240                           	psect	cinit
   241  0011                     start_initialization:	
   242                           ; #config settings
   243                           
   244  0011                     __initialization:
   245                           
   246                           ; Clear objects allocated to COMMON
   247  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   248  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   249  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   250  0014  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   251                           
   252                           ; Clear objects allocated to BANK0
   253  0015  1283               	bcf	3,5	;RP0=0, select bank0
   254  0016  1303               	bcf	3,6	;RP1=0, select bank0
   255  0017  01A0               	clrf	__pbssBANK0& (0+127)
   256  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   257  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   258  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   259  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   260  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   261  001D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   262  001E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   263  001F                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266  001F                     __end_of__initialization:
   267  001F  0183               	clrf	3
   268  0020  120A  118A  2966   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMMON
   271  0079                     __pbssCOMMON:
   272  0079                     _BANDERAS:
   273  0079                     	ds	2
   274  007B                     _contador:
   275  007B                     	ds	2
   276                           
   277                           	psect	bssBANK0
   278  0020                     __pbssBANK0:
   279  0020                     _menos_sig:
   280  0020                     	ds	2
   281  0022                     _mas_sig:
   282  0022                     	ds	2
   283  0024                     _cont:
   284  0024                     	ds	2
   285  0026                     _result_adc1:
   286  0026                     	ds	2
   287                           
   288                           	psect	cstackCOMMON
   289  0070                     __pcstackCOMMON:
   290  0070                     ?_Display_:
   291  0070                     ?_CONFIG_IO:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_CONFIG_INTERRUPT:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_toggle:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_separacion:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_ADC_INIT:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_ADC_INTERRUPT:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_Display:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_Display:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_isr:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_main:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_ADC_READ:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ADC_READ@canal:	
   325                           ; 2 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     ??_ADC_READ:
   331  0072                     Display@num:	
   332                           ; 1 bytes @ 0x2
   333                           
   334                           
   335                           ; 1 bytes @ 0x2
   336  0072                     	ds	1
   337  0073                     ??_Display_:
   338  0073                     ??_isr:	
   339                           ; 1 bytes @ 0x3
   340                           
   341                           
   342                           ; 1 bytes @ 0x3
   343  0073                     	ds	6
   344                           
   345                           	psect	cstackBANK0
   346  0000                     __pcstackBANK0:
   347  0000                     ??_CONFIG_IO:
   348  0000                     ??_CONFIG_INTERRUPT:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0000                     ??_toggle:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0000                     ??_separacion:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0000                     ??_ADC_INIT:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0000                     ??_ADC_INTERRUPT:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0000                     ??_main:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           	psect	maintext
   368  0166                     __pmaintext:	
   369                           ; 1 bytes @ 0x0
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 102 in file "Laboratorio_02.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels required when called:    4
   395 ;; This function calls:
   396 ;;		_ADC_INIT
   397 ;;		_ADC_INTERRUPT
   398 ;;		_CONFIG_INTERRUPT
   399 ;;		_CONFIG_IO
   400 ;;		_separacion
   401 ;;		_toggle
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _main
   409  0166                     _main:
   410  0166                     l1177:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   413                           
   414                           
   415                           ;Laboratorio_02.c: 103:     CONFIG_IO();
   416  0166  120A  118A  21EB  120A  118A  	fcall	_CONFIG_IO
   417                           
   418                           ;Laboratorio_02.c: 104:     CONFIG_INTERRUPT();
   419  016B  120A  118A  221E  120A  118A  	fcall	_CONFIG_INTERRUPT
   420  0170                     l1179:
   421                           
   422                           ;Laboratorio_02.c: 105:     ADC_INIT();
   423  0170  120A  118A  2232  120A  118A  	fcall	_ADC_INIT
   424  0175                     l1181:
   425                           
   426                           ;Laboratorio_02.c: 106:     ADC_INTERRUPT();
   427  0175  120A  118A  222B  120A  118A  	fcall	_ADC_INTERRUPT
   428  017A                     l1183:
   429                           
   430                           ;Laboratorio_02.c: 108:         if (cont >= 1) {
   431  017A  1283               	bcf	3,5	;RP0=0, select bank0
   432  017B  1303               	bcf	3,6	;RP1=0, select bank0
   433  017C  0825               	movf	_cont+1,w
   434  017D  3A80               	xorlw	128
   435  017E  00FF               	movwf	btemp+1
   436  017F  3080               	movlw	128
   437  0180  027F               	subwf	btemp+1,w
   438  0181  1D03               	skipz
   439  0182  2985               	goto	u285
   440  0183  3001               	movlw	1
   441  0184  0224               	subwf	_cont,w
   442  0185                     u285:
   443  0185  1C03               	skipc
   444  0186  2988               	goto	u281
   445  0187  2989               	goto	u280
   446  0188                     u281:
   447  0188  2992               	goto	l1189
   448  0189                     u280:
   449  0189                     l1185:
   450                           
   451                           ;Laboratorio_02.c: 109:             cont = 0;
   452  0189  1283               	bcf	3,5	;RP0=0, select bank0
   453  018A  1303               	bcf	3,6	;RP1=0, select bank0
   454  018B  01A4               	clrf	_cont
   455  018C  01A5               	clrf	_cont+1
   456  018D                     l1187:
   457                           
   458                           ;Laboratorio_02.c: 110:             toggle();
   459  018D  120A  118A  21D7  120A  118A  	fcall	_toggle
   460  0192                     l1189:
   461                           
   462                           ;Laboratorio_02.c: 112:         separacion();
   463  0192  120A  118A  220F  120A  118A  	fcall	_separacion
   464  0197                     l1191:
   465                           
   466                           ;Laboratorio_02.c: 114:         if (result_adc1 > contador) {
   467  0197  1283               	bcf	3,5	;RP0=0, select bank0
   468  0198  1303               	bcf	3,6	;RP1=0, select bank0
   469  0199  0827               	movf	_result_adc1+1,w
   470  019A  027C               	subwf	_contador+1,w
   471  019B  1D03               	skipz
   472  019C  299F               	goto	u295
   473  019D  0826               	movf	_result_adc1,w
   474  019E  027B               	subwf	_contador,w
   475  019F                     u295:
   476  019F  1803               	skipnc
   477  01A0  29A2               	goto	u291
   478  01A1  29A3               	goto	u290
   479  01A2                     u291:
   480  01A2  29A5               	goto	l1195
   481  01A3                     u290:
   482  01A3                     l1193:
   483                           
   484                           ;Laboratorio_02.c: 115:             PORTEbits.RE0 = 1;
   485  01A3  1409               	bsf	9,0	;volatile
   486                           
   487                           ;Laboratorio_02.c: 117:         }else if (result_adc1 < contador) {
   488  01A4  297A               	goto	l1183
   489  01A5                     l1195:
   490  01A5  087C               	movf	_contador+1,w
   491  01A6  0227               	subwf	_result_adc1+1,w
   492  01A7  1D03               	skipz
   493  01A8  29AB               	goto	u305
   494  01A9  087B               	movf	_contador,w
   495  01AA  0226               	subwf	_result_adc1,w
   496  01AB                     u305:
   497  01AB  1803               	skipnc
   498  01AC  29AE               	goto	u301
   499  01AD  29AF               	goto	u300
   500  01AE                     u301:
   501  01AE  297A               	goto	l1183
   502  01AF                     u300:
   503  01AF                     l1197:
   504                           
   505                           ;Laboratorio_02.c: 118:             PORTEbits.RE0 = 0;
   506  01AF  1009               	bcf	9,0	;volatile
   507  01B0  297A               	goto	l1183
   508  01B1  120A  118A  280E   	ljmp	start
   509  01B4                     __end_of_main:
   510                           
   511                           	psect	text1
   512  01D7                     __ptext1:	
   513 ;; *************** function _toggle *****************
   514 ;; Defined at:
   515 ;;		line 157 in file "Laboratorio_02.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    3
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _toggle
   545  01D7                     _toggle:
   546  01D7                     l1129:	
   547                           ;incstack = 0
   548                           ; Regs used in _toggle: [wreg+status,2+status,0]
   549                           
   550                           
   551                           ;Laboratorio_02.c: 158:     if (BANDERAS == 1) {
   552  01D7  0379               	decf	_BANDERAS,w
   553  01D8  047A               	iorwf	_BANDERAS+1,w
   554  01D9  1D03               	btfss	3,2
   555  01DA  29DC               	goto	u181
   556  01DB  29DD               	goto	u180
   557  01DC                     u181:
   558  01DC  29E0               	goto	l1133
   559  01DD                     u180:
   560  01DD                     l1131:
   561                           
   562                           ;Laboratorio_02.c: 159:         BANDERAS = 0;
   563  01DD  01F9               	clrf	_BANDERAS
   564  01DE  01FA               	clrf	_BANDERAS+1
   565                           
   566                           ;Laboratorio_02.c: 160:     } else if (BANDERAS == 0) {
   567  01DF  29EA               	goto	l168
   568  01E0                     l1133:
   569  01E0  0879               	movf	_BANDERAS,w
   570  01E1  047A               	iorwf	_BANDERAS+1,w
   571  01E2  1D03               	btfss	3,2
   572  01E3  29E5               	goto	u191
   573  01E4  29E6               	goto	u190
   574  01E5                     u191:
   575  01E5  29EA               	goto	l168
   576  01E6                     u190:
   577  01E6                     l1135:
   578                           
   579                           ;Laboratorio_02.c: 161:         BANDERAS = 1;
   580  01E6  3001               	movlw	1
   581  01E7  00F9               	movwf	_BANDERAS
   582  01E8  3000               	movlw	0
   583  01E9  00FA               	movwf	_BANDERAS+1
   584  01EA                     l168:
   585  01EA  0008               	return
   586  01EB                     __end_of_toggle:
   587                           
   588                           	psect	text2
   589  020F                     __ptext2:	
   590 ;; *************** function _separacion *****************
   591 ;; Defined at:
   592 ;;		line 166 in file "Laboratorio_02.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    3
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _separacion
   622  020F                     _separacion:
   623  020F                     l1137:	
   624                           ;incstack = 0
   625                           ; Regs used in _separacion: [wreg]
   626                           
   627                           
   628                           ;Laboratorio_02.c: 167:     menos_sig = (0b11110000 & result_adc1);
   629  020F  30F0               	movlw	240
   630  0210  1283               	bcf	3,5	;RP0=0, select bank0
   631  0211  1303               	bcf	3,6	;RP1=0, select bank0
   632  0212  0526               	andwf	_result_adc1,w
   633  0213  00A0               	movwf	_menos_sig
   634  0214  3000               	movlw	0
   635  0215  0527               	andwf	_result_adc1+1,w
   636  0216  00A1               	movwf	_menos_sig+1
   637                           
   638                           ;Laboratorio_02.c: 168:     mas_sig = (0b00001111 & result_adc1);
   639  0217  300F               	movlw	15
   640  0218  0526               	andwf	_result_adc1,w
   641  0219  00A2               	movwf	_mas_sig
   642  021A  3000               	movlw	0
   643  021B  0527               	andwf	_result_adc1+1,w
   644  021C  00A3               	movwf	_mas_sig+1
   645  021D                     l171:
   646  021D  0008               	return
   647  021E                     __end_of_separacion:
   648                           
   649                           	psect	text3
   650  01EB                     __ptext3:	
   651 ;; *************** function _CONFIG_IO *****************
   652 ;; Defined at:
   653 ;;		line 124 in file "Laboratorio_02.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    3
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _CONFIG_IO
   683  01EB                     _CONFIG_IO:
   684  01EB                     l1105:	
   685                           ;incstack = 0
   686                           ; Regs used in _CONFIG_IO: [wreg+status,2]
   687                           
   688                           
   689                           ;Laboratorio_02.c: 125:     TRISA = 0;
   690  01EB  1683               	bsf	3,5	;RP0=1, select bank1
   691  01EC  1303               	bcf	3,6	;RP1=0, select bank1
   692  01ED  0185               	clrf	5	;volatile
   693  01EE                     l1107:
   694                           
   695                           ;Laboratorio_02.c: 126:     TRISB = 0b00000111;
   696  01EE  3007               	movlw	7
   697  01EF  0086               	movwf	6	;volatile
   698  01F0                     l1109:
   699                           
   700                           ;Laboratorio_02.c: 127:     TRISD = 0;
   701  01F0  0188               	clrf	8	;volatile
   702  01F1                     l1111:
   703                           
   704                           ;Laboratorio_02.c: 128:     TRISE = 0;
   705  01F1  0189               	clrf	9	;volatile
   706  01F2                     l1113:
   707                           
   708                           ;Laboratorio_02.c: 129:     ANSEL = 0;
   709  01F2  1683               	bsf	3,5	;RP0=1, select bank3
   710  01F3  1703               	bsf	3,6	;RP1=1, select bank3
   711  01F4  0188               	clrf	8	;volatile
   712  01F5                     l1115:
   713                           
   714                           ;Laboratorio_02.c: 130:     ANSELH = 0b00000000;
   715  01F5  0189               	clrf	9	;volatile
   716  01F6                     l1117:
   717                           
   718                           ;Laboratorio_02.c: 132:     PORTA = 0;
   719  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   720  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   721  01F8  0185               	clrf	5	;volatile
   722  01F9                     l1119:
   723                           
   724                           ;Laboratorio_02.c: 133:     PORTB = 0;
   725  01F9  0186               	clrf	6	;volatile
   726  01FA                     l1121:
   727                           
   728                           ;Laboratorio_02.c: 134:     PORTC = 0;
   729  01FA  0187               	clrf	7	;volatile
   730  01FB                     l1123:
   731                           
   732                           ;Laboratorio_02.c: 135:     PORTD = 0;
   733  01FB  0188               	clrf	8	;volatile
   734  01FC                     l1125:
   735                           
   736                           ;Laboratorio_02.c: 136:     PORTE = 0;
   737  01FC  0189               	clrf	9	;volatile
   738  01FD                     l153:
   739  01FD  0008               	return
   740  01FE                     __end_of_CONFIG_IO:
   741                           
   742                           	psect	text4
   743  021E                     __ptext4:	
   744 ;; *************** function _CONFIG_INTERRUPT *****************
   745 ;; Defined at:
   746 ;;		line 139 in file "Laboratorio_02.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _CONFIG_INTERRUPT
   776  021E                     _CONFIG_INTERRUPT:
   777  021E                     l1127:	
   778                           ;incstack = 0
   779                           ; Regs used in _CONFIG_INTERRUPT: [wreg]
   780                           
   781                           
   782                           ;Laboratorio_02.c: 140:     TMR0 = 4;
   783  021E  3004               	movlw	4
   784  021F  1283               	bcf	3,5	;RP0=0, select bank0
   785  0220  1303               	bcf	3,6	;RP1=0, select bank0
   786  0221  0081               	movwf	1	;volatile
   787                           
   788                           ;Laboratorio_02.c: 141:     OPTION_REG = 0b10000001;
   789  0222  3081               	movlw	129
   790  0223  1683               	bsf	3,5	;RP0=1, select bank1
   791  0224  1303               	bcf	3,6	;RP1=0, select bank1
   792  0225  0081               	movwf	1	;volatile
   793                           
   794                           ;Laboratorio_02.c: 142:     INTCON = 0b10101001;
   795  0226  30A9               	movlw	169
   796  0227  008B               	movwf	11	;volatile
   797                           
   798                           ;Laboratorio_02.c: 143:     IOCB = 0b00000011;
   799  0228  3003               	movlw	3
   800  0229  0096               	movwf	22	;volatile
   801  022A                     l156:
   802  022A  0008               	return
   803  022B                     __end_of_CONFIG_INTERRUPT:
   804                           
   805                           	psect	text5
   806  022B                     __ptext5:	
   807 ;; *************** function _ADC_INTERRUPT *****************
   808 ;; Defined at:
   809 ;;		line 54 in file "./LIB_ADC.h"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		None
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    3
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _ADC_INTERRUPT
   839  022B                     _ADC_INTERRUPT:
   840  022B                     l1089:	
   841                           ;incstack = 0
   842                           ; Regs used in _ADC_INTERRUPT: []
   843                           
   844                           
   845                           ;./LIB_ADC.h: 55:     PIE1bits.ADIE = 1;
   846  022B  1683               	bsf	3,5	;RP0=1, select bank1
   847  022C  1303               	bcf	3,6	;RP1=0, select bank1
   848  022D  170C               	bsf	12,6	;volatile
   849                           
   850                           ;./LIB_ADC.h: 56:     PIR1bits.ADIF = 1;
   851  022E  1283               	bcf	3,5	;RP0=0, select bank0
   852  022F  1303               	bcf	3,6	;RP1=0, select bank0
   853  0230  170C               	bsf	12,6	;volatile
   854  0231                     l74:
   855  0231  0008               	return
   856  0232                     __end_of_ADC_INTERRUPT:
   857                           
   858                           	psect	text6
   859  0232                     __ptext6:	
   860 ;; *************** function _ADC_INIT *****************
   861 ;; Defined at:
   862 ;;		line 41 in file "./LIB_ADC.h"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		status,2
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    3
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _ADC_INIT
   892  0232                     _ADC_INIT:
   893  0232                     l1075:	
   894                           ;incstack = 0
   895                           ; Regs used in _ADC_INIT: [status,2]
   896                           
   897                           
   898                           ;./LIB_ADC.h: 42:     ADCON1 = 0b00000000;
   899  0232  1683               	bsf	3,5	;RP0=1, select bank1
   900  0233  1303               	bcf	3,6	;RP1=0, select bank1
   901  0234  019F               	clrf	31	;volatile
   902  0235                     l65:
   903  0235  0008               	return
   904  0236                     __end_of_ADC_INIT:
   905                           
   906                           	psect	text7
   907  0023                     __ptext7:	
   908 ;; *************** function _isr *****************
   909 ;; Defined at:
   910 ;;		line 56 in file "Laboratorio_02.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0
   926 ;;      Temps:          6       0       0       0       0
   927 ;;      Totals:         6       0       0       0       0
   928 ;;Total ram usage:        6 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    2
   931 ;; This function calls:
   932 ;;		_ADC_READ
   933 ;;		_Display_
   934 ;; This function is called by:
   935 ;;		Interrupt level 1
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _isr
   941  0023                     _isr:
   942  0023                     i1l1139:
   943                           
   944                           ;Laboratorio_02.c: 58:     if (INTCONbits.RBIF) {
   945  0023  1C0B               	btfss	11,0	;volatile
   946  0024  2826               	goto	u20_21
   947  0025  2827               	goto	u20_20
   948  0026                     u20_21:
   949  0026  2884               	goto	i1l1157
   950  0027                     u20_20:
   951  0027                     i1l1141:
   952                           
   953                           ;Laboratorio_02.c: 59:         INTCONbits.RBIF = 0;
   954  0027  100B               	bcf	11,0	;volatile
   955                           
   956                           ;Laboratorio_02.c: 60:         if (PORTBbits.RB0 == 1) {
   957  0028  1283               	bcf	3,5	;RP0=0, select bank0
   958  0029  1303               	bcf	3,6	;RP1=0, select bank0
   959  002A  1C06               	btfss	6,0	;volatile
   960  002B  282D               	goto	u21_21
   961  002C  282E               	goto	u21_20
   962  002D                     u21_21:
   963  002D  283B               	goto	i1l1145
   964  002E                     u21_20:
   965  002E                     i1l1143:
   966                           
   967                           ;Laboratorio_02.c: 61:             _delay((unsigned long)((200)*(4000000/4000.0)));
   968  002E  3002               	movlw	2
   969  002F  00F5               	movwf	??_isr+2
   970  0030  3004               	movlw	4
   971  0031  00F4               	movwf	??_isr+1
   972  0032  30BA               	movlw	186
   973  0033  00F3               	movwf	??_isr
   974  0034                     u31_27:
   975  0034  0BF3               	decfsz	??_isr,f
   976  0035  2834               	goto	u31_27
   977  0036  0BF4               	decfsz	??_isr+1,f
   978  0037  2834               	goto	u31_27
   979  0038  0BF5               	decfsz	??_isr+2,f
   980  0039  2834               	goto	u31_27
   981  003A  0000               	nop
   982  003B                     i1l1145:
   983                           
   984                           ;Laboratorio_02.c: 63:         if (PORTBbits.RB0 == 0){
   985  003B  1283               	bcf	3,5	;RP0=0, select bank0
   986  003C  1303               	bcf	3,6	;RP1=0, select bank0
   987  003D  1806               	btfsc	6,0	;volatile
   988  003E  2840               	goto	u22_21
   989  003F  2841               	goto	u22_20
   990  0040                     u22_21:
   991  0040  2856               	goto	i1l1149
   992  0041                     u22_20:
   993  0041                     i1l1147:
   994                           
   995                           ;Laboratorio_02.c: 64:             contador++;
   996  0041  3001               	movlw	1
   997  0042  07FB               	addwf	_contador,f
   998  0043  1803               	skipnc
   999  0044  0AFC               	incf	_contador+1,f
  1000  0045  3000               	movlw	0
  1001  0046  07FC               	addwf	_contador+1,f
  1002                           
  1003                           ;Laboratorio_02.c: 65:             PORTA = contador;
  1004  0047  087B               	movf	_contador,w
  1005  0048  0085               	movwf	5	;volatile
  1006                           
  1007                           ;Laboratorio_02.c: 66:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1008  0049  3002               	movlw	2
  1009  004A  00F5               	movwf	??_isr+2
  1010  004B  3004               	movlw	4
  1011  004C  00F4               	movwf	??_isr+1
  1012  004D  30BA               	movlw	186
  1013  004E  00F3               	movwf	??_isr
  1014  004F                     u32_27:
  1015  004F  0BF3               	decfsz	??_isr,f
  1016  0050  284F               	goto	u32_27
  1017  0051  0BF4               	decfsz	??_isr+1,f
  1018  0052  284F               	goto	u32_27
  1019  0053  0BF5               	decfsz	??_isr+2,f
  1020  0054  284F               	goto	u32_27
  1021  0055  0000               	nop
  1022  0056                     i1l1149:
  1023                           
  1024                           ;Laboratorio_02.c: 68:                 if (PORTBbits.RB1 == 1) {
  1025  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0058  1C86               	btfss	6,1	;volatile
  1028  0059  285B               	goto	u23_21
  1029  005A  285C               	goto	u23_20
  1030  005B                     u23_21:
  1031  005B  2869               	goto	i1l1153
  1032  005C                     u23_20:
  1033  005C                     i1l1151:
  1034                           
  1035                           ;Laboratorio_02.c: 69:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1036  005C  3002               	movlw	2
  1037  005D  00F5               	movwf	??_isr+2
  1038  005E  3004               	movlw	4
  1039  005F  00F4               	movwf	??_isr+1
  1040  0060  30BA               	movlw	186
  1041  0061  00F3               	movwf	??_isr
  1042  0062                     u33_27:
  1043  0062  0BF3               	decfsz	??_isr,f
  1044  0063  2862               	goto	u33_27
  1045  0064  0BF4               	decfsz	??_isr+1,f
  1046  0065  2862               	goto	u33_27
  1047  0066  0BF5               	decfsz	??_isr+2,f
  1048  0067  2862               	goto	u33_27
  1049  0068  0000               	nop
  1050  0069                     i1l1153:
  1051                           
  1052                           ;Laboratorio_02.c: 71:                 if (PORTBbits.RB1 == 0) {
  1053  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1054  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1055  006B  1886               	btfsc	6,1	;volatile
  1056  006C  286E               	goto	u24_21
  1057  006D  286F               	goto	u24_20
  1058  006E                     u24_21:
  1059  006E  2884               	goto	i1l1157
  1060  006F                     u24_20:
  1061  006F                     i1l1155:
  1062                           
  1063                           ;Laboratorio_02.c: 72:                 contador--;
  1064  006F  30FF               	movlw	255
  1065  0070  07FB               	addwf	_contador,f
  1066  0071  1803               	skipnc
  1067  0072  0AFC               	incf	_contador+1,f
  1068  0073  30FF               	movlw	255
  1069  0074  07FC               	addwf	_contador+1,f
  1070                           
  1071                           ;Laboratorio_02.c: 73:                 PORTA = contador;
  1072  0075  087B               	movf	_contador,w
  1073  0076  0085               	movwf	5	;volatile
  1074                           
  1075                           ;Laboratorio_02.c: 74:                 _delay((unsigned long)((200)*(4000000/4000.0)));
  1076  0077  3002               	movlw	2
  1077  0078  00F5               	movwf	??_isr+2
  1078  0079  3004               	movlw	4
  1079  007A  00F4               	movwf	??_isr+1
  1080  007B  30BA               	movlw	186
  1081  007C  00F3               	movwf	??_isr
  1082  007D                     u34_27:
  1083  007D  0BF3               	decfsz	??_isr,f
  1084  007E  287D               	goto	u34_27
  1085  007F  0BF4               	decfsz	??_isr+1,f
  1086  0080  287D               	goto	u34_27
  1087  0081  0BF5               	decfsz	??_isr+2,f
  1088  0082  287D               	goto	u34_27
  1089  0083  0000               	nop
  1090  0084                     i1l1157:
  1091                           
  1092                           ;Laboratorio_02.c: 79:     if (PIR1bits.ADIF) {
  1093  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0086  1F0C               	btfss	12,6	;volatile
  1096  0087  2889               	goto	u25_21
  1097  0088  288A               	goto	u25_20
  1098  0089                     u25_21:
  1099  0089  28B3               	goto	i1l133
  1100  008A                     u25_20:
  1101  008A                     i1l1159:
  1102                           
  1103                           ;Laboratorio_02.c: 80:         PIR1bits.ADIF = 0;
  1104  008A  130C               	bcf	12,6	;volatile
  1105  008B                     i1l1161:
  1106                           
  1107                           ;Laboratorio_02.c: 82:         ADC_READ(8);
  1108  008B  3008               	movlw	8
  1109  008C  00F0               	movwf	ADC_READ@canal
  1110  008D  3000               	movlw	0
  1111  008E  00F1               	movwf	ADC_READ@canal+1
  1112  008F  120A  118A  21FE  120A  118A  	fcall	_ADC_READ
  1113  0094                     i1l1163:
  1114                           
  1115                           ;Laboratorio_02.c: 83:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1116  0094  3003               	movlw	3
  1117  0095  00F4               	movwf	??_isr+1
  1118  0096  3097               	movlw	151
  1119  0097  00F3               	movwf	??_isr
  1120  0098                     u35_27:
  1121  0098  0BF3               	decfsz	??_isr,f
  1122  0099  2898               	goto	u35_27
  1123  009A  0BF4               	decfsz	??_isr+1,f
  1124  009B  2898               	goto	u35_27
  1125  009C  289D               	nop2
  1126  009D                     i1l1165:
  1127                           
  1128                           ;Laboratorio_02.c: 84:         ADCON0bits.GO = 1;
  1129  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1130  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1131  009F  149F               	bsf	31,1	;volatile
  1132                           
  1133                           ;Laboratorio_02.c: 85:         while (ADCON0bits.GO != 0) {
  1134  00A0  28AD               	goto	i1l1171
  1135  00A1                     i1l1167:
  1136                           
  1137                           ;Laboratorio_02.c: 86:             result_adc1 = ADRESH;
  1138  00A1  081E               	movf	30,w	;volatile
  1139  00A2  00F3               	movwf	??_isr
  1140  00A3  01F4               	clrf	??_isr+1
  1141  00A4  0873               	movf	??_isr,w
  1142  00A5  00A6               	movwf	_result_adc1
  1143  00A6  0874               	movf	??_isr+1,w
  1144  00A7  00A7               	movwf	_result_adc1+1
  1145  00A8                     i1l1169:
  1146                           
  1147                           ;Laboratorio_02.c: 87:             Display_();
  1148  00A8  120A  118A  21B4  120A  118A  	fcall	_Display_
  1149  00AD                     i1l1171:
  1150                           
  1151                           ;Laboratorio_02.c: 85:         while (ADCON0bits.GO != 0) {
  1152  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1154  00AF  189F               	btfsc	31,1	;volatile
  1155  00B0  28B2               	goto	u26_21
  1156  00B1  28B3               	goto	u26_20
  1157  00B2                     u26_21:
  1158  00B2  28A1               	goto	i1l1167
  1159  00B3                     u26_20:
  1160  00B3                     i1l133:	
  1161                           ;Laboratorio_02.c: 89:     }
  1162                           
  1163                           
  1164                           ;Laboratorio_02.c: 91:     if (TMR0IF) {
  1165  00B3  1D0B               	btfss	11,2	;volatile
  1166  00B4  28B6               	goto	u27_21
  1167  00B5  28B7               	goto	u27_20
  1168  00B6                     u27_21:
  1169  00B6  28C0               	goto	i1l138
  1170  00B7                     u27_20:
  1171  00B7                     i1l1173:
  1172                           
  1173                           ;Laboratorio_02.c: 92:         TMR0IF = 0;
  1174  00B7  110B               	bcf	11,2	;volatile
  1175  00B8                     i1l1175:
  1176                           
  1177                           ;Laboratorio_02.c: 93:         TMR0 = 4;
  1178  00B8  3004               	movlw	4
  1179  00B9  0081               	movwf	1	;volatile
  1180                           
  1181                           ;Laboratorio_02.c: 94:         cont++;
  1182  00BA  3001               	movlw	1
  1183  00BB  07A4               	addwf	_cont,f
  1184  00BC  1803               	skipnc
  1185  00BD  0AA5               	incf	_cont+1,f
  1186  00BE  3000               	movlw	0
  1187  00BF  07A5               	addwf	_cont+1,f
  1188  00C0                     i1l138:
  1189  00C0  0878               	movf	??_isr+5,w
  1190  00C1  008A               	movwf	10
  1191  00C2  0877               	movf	??_isr+4,w
  1192  00C3  0084               	movwf	4
  1193  00C4  0E76               	swapf	??_isr+3,w
  1194  00C5  0083               	movwf	3
  1195  00C6  0EFE               	swapf	btemp,f
  1196  00C7  0E7E               	swapf	btemp,w
  1197  00C8  0009               	retfie
  1198  00C9                     __end_of_isr:
  1199                           
  1200                           	psect	intentry
  1201  0004                     __pintentry:	
  1202                           ;incstack = 0
  1203                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1204                           
  1205  0004                     interrupt_function:
  1206  007E                     saved_w	set	btemp
  1207  0004  00FE               	movwf	btemp
  1208  0005  0E03               	swapf	3,w
  1209  0006  00F6               	movwf	??_isr+3
  1210  0007  0804               	movf	4,w
  1211  0008  00F7               	movwf	??_isr+4
  1212  0009  080A               	movf	10,w
  1213  000A  00F8               	movwf	??_isr+5
  1214  000B  120A  118A  2823   	ljmp	_isr
  1215                           
  1216                           	psect	text8
  1217  01B4                     __ptext8:	
  1218 ;; *************** function _Display_ *****************
  1219 ;; Defined at:
  1220 ;;		line 146 in file "Laboratorio_02.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    1
  1241 ;; This function calls:
  1242 ;;		_Display
  1243 ;; This function is called by:
  1244 ;;		_isr
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _Display_
  1250  01B4                     _Display_:
  1251  01B4                     i1l1091:	
  1252                           ;incstack = 0
  1253                           ; Regs used in _Display_: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1254                           
  1255                           
  1256                           ;Laboratorio_02.c: 147:     PORTE = 0;
  1257  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1258  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1259  01B6  0189               	clrf	9	;volatile
  1260  01B7                     i1l1093:
  1261                           
  1262                           ;Laboratorio_02.c: 148:     if (BANDERAS == 0) {
  1263  01B7  0879               	movf	_BANDERAS,w
  1264  01B8  047A               	iorwf	_BANDERAS+1,w
  1265  01B9  1D03               	btfss	3,2
  1266  01BA  29BC               	goto	u16_21
  1267  01BB  29BD               	goto	u16_20
  1268  01BC                     u16_21:
  1269  01BC  29C7               	goto	i1l1099
  1270  01BD                     u16_20:
  1271  01BD                     i1l1095:
  1272                           
  1273                           ;Laboratorio_02.c: 149:         Display(menos_sig);
  1274  01BD  0820               	movf	_menos_sig,w
  1275  01BE  120A  118A  20C9  120A  118A  	fcall	_Display
  1276  01C3                     i1l1097:
  1277                           
  1278                           ;Laboratorio_02.c: 150:         PORTEbits.RE1 = 1;
  1279  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1280  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1281  01C5  1489               	bsf	9,1	;volatile
  1282                           
  1283                           ;Laboratorio_02.c: 151:     } else if (BANDERAS == 1) {
  1284  01C6  29D6               	goto	i1l162
  1285  01C7                     i1l1099:
  1286  01C7  0379               	decf	_BANDERAS,w
  1287  01C8  047A               	iorwf	_BANDERAS+1,w
  1288  01C9  1D03               	btfss	3,2
  1289  01CA  29CC               	goto	u17_21
  1290  01CB  29CD               	goto	u17_20
  1291  01CC                     u17_21:
  1292  01CC  29D6               	goto	i1l162
  1293  01CD                     u17_20:
  1294  01CD                     i1l1101:
  1295                           
  1296                           ;Laboratorio_02.c: 152:         Display(mas_sig);
  1297  01CD  0822               	movf	_mas_sig,w
  1298  01CE  120A  118A  20C9  120A  118A  	fcall	_Display
  1299  01D3                     i1l1103:
  1300                           
  1301                           ;Laboratorio_02.c: 153:         PORTEbits.RE2 = 1;
  1302  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1303  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1304  01D5  1509               	bsf	9,2	;volatile
  1305  01D6                     i1l162:
  1306  01D6  0008               	return
  1307  01D7                     __end_of_Display_:
  1308                           
  1309                           	psect	text9
  1310  00C9                     __ptext9:	
  1311 ;; *************** function _Display *****************
  1312 ;; Defined at:
  1313 ;;		line 38 in file "./LIB_Display.h"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  num             1    wreg     unsigned char 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  num             1    2[COMMON] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         1       0       0       0       0
  1329 ;;      Temps:          2       0       0       0       0
  1330 ;;      Totals:         3       0       0       0       0
  1331 ;;Total ram usage:        3 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_Display_
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _Display
  1342  00C9                     _Display:
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in _Display: [wreg-fsr0h+status,2+status,0]
  1346                           ;Display@num stored from wreg
  1347  00C9  00F2               	movwf	Display@num
  1348  00CA                     i1l1001:
  1349                           
  1350                           ;./LIB_Display.h: 39:     TRISD = 0;
  1351  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1352  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1353  00CC  0188               	clrf	8	;volatile
  1354                           
  1355                           ;./LIB_Display.h: 40:     PORTD = 0;
  1356  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1357  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1358  00CF  0188               	clrf	8	;volatile
  1359                           
  1360                           ;./LIB_Display.h: 41:     switch (num) {
  1361  00D0  28FE               	goto	i1l1069
  1362  00D1                     i1l1003:
  1363                           
  1364                           ;./LIB_Display.h: 43:             PORTD = 0x3F;
  1365  00D1  303F               	movlw	63
  1366  00D2  0088               	movwf	8	;volatile
  1367                           
  1368                           ;./LIB_Display.h: 44:             break;
  1369  00D3  2965               	goto	i1l111
  1370  00D4                     i1l1005:
  1371                           
  1372                           ;./LIB_Display.h: 46:             PORTD = 0x06;
  1373  00D4  3006               	movlw	6
  1374  00D5  0088               	movwf	8	;volatile
  1375                           
  1376                           ;./LIB_Display.h: 47:             break;
  1377  00D6  2965               	goto	i1l111
  1378  00D7                     i1l1007:
  1379                           
  1380                           ;./LIB_Display.h: 49:             PORTD = 0x5B;
  1381  00D7  305B               	movlw	91
  1382  00D8  0088               	movwf	8	;volatile
  1383                           
  1384                           ;./LIB_Display.h: 50:             break;
  1385  00D9  2965               	goto	i1l111
  1386  00DA                     i1l1009:
  1387                           
  1388                           ;./LIB_Display.h: 52:             PORTD = 0x4F;
  1389  00DA  304F               	movlw	79
  1390  00DB  0088               	movwf	8	;volatile
  1391                           
  1392                           ;./LIB_Display.h: 53:             break;
  1393  00DC  2965               	goto	i1l111
  1394  00DD                     i1l1011:
  1395                           
  1396                           ;./LIB_Display.h: 55:             PORTD = 0x66;
  1397  00DD  3066               	movlw	102
  1398  00DE  0088               	movwf	8	;volatile
  1399                           
  1400                           ;./LIB_Display.h: 56:             break;
  1401  00DF  2965               	goto	i1l111
  1402  00E0                     i1l1013:
  1403                           
  1404                           ;./LIB_Display.h: 58:             PORTD = 0x6D;
  1405  00E0  306D               	movlw	109
  1406  00E1  0088               	movwf	8	;volatile
  1407                           
  1408                           ;./LIB_Display.h: 59:             break;
  1409  00E2  2965               	goto	i1l111
  1410  00E3                     i1l1015:
  1411                           
  1412                           ;./LIB_Display.h: 61:             PORTD = 0x7D;
  1413  00E3  307D               	movlw	125
  1414  00E4  0088               	movwf	8	;volatile
  1415                           
  1416                           ;./LIB_Display.h: 62:             break;
  1417  00E5  2965               	goto	i1l111
  1418  00E6                     i1l1017:
  1419                           
  1420                           ;./LIB_Display.h: 64:             PORTD = 0x07;
  1421  00E6  3007               	movlw	7
  1422  00E7  0088               	movwf	8	;volatile
  1423                           
  1424                           ;./LIB_Display.h: 65:             break;
  1425  00E8  2965               	goto	i1l111
  1426  00E9                     i1l1019:
  1427                           
  1428                           ;./LIB_Display.h: 67:             PORTD = 0x7F;
  1429  00E9  307F               	movlw	127
  1430  00EA  0088               	movwf	8	;volatile
  1431                           
  1432                           ;./LIB_Display.h: 68:             break;
  1433  00EB  2965               	goto	i1l111
  1434  00EC                     i1l1021:
  1435                           
  1436                           ;./LIB_Display.h: 70:             PORTD = 0x6F;
  1437  00EC  306F               	movlw	111
  1438  00ED  0088               	movwf	8	;volatile
  1439                           
  1440                           ;./LIB_Display.h: 71:             break;
  1441  00EE  2965               	goto	i1l111
  1442  00EF                     i1l1023:
  1443                           
  1444                           ;./LIB_Display.h: 73:             PORTD = 0x77;
  1445  00EF  3077               	movlw	119
  1446  00F0  0088               	movwf	8	;volatile
  1447                           
  1448                           ;./LIB_Display.h: 74:             break;
  1449  00F1  2965               	goto	i1l111
  1450  00F2                     i1l1025:
  1451                           
  1452                           ;./LIB_Display.h: 76:             PORTD = 0x1F;
  1453  00F2  301F               	movlw	31
  1454  00F3  0088               	movwf	8	;volatile
  1455                           
  1456                           ;./LIB_Display.h: 77:             break;
  1457  00F4  2965               	goto	i1l111
  1458  00F5                     i1l1027:
  1459                           
  1460                           ;./LIB_Display.h: 79:             PORTD = 0x4E;
  1461  00F5  304E               	movlw	78
  1462  00F6  0088               	movwf	8	;volatile
  1463                           
  1464                           ;./LIB_Display.h: 80:             break;
  1465  00F7  2965               	goto	i1l111
  1466  00F8                     i1l1029:
  1467                           
  1468                           ;./LIB_Display.h: 82:             PORTD = 0x3D;
  1469  00F8  303D               	movlw	61
  1470  00F9  0088               	movwf	8	;volatile
  1471                           
  1472                           ;./LIB_Display.h: 83:             break;
  1473  00FA  2965               	goto	i1l111
  1474  00FB                     i1l1033:
  1475                           
  1476                           ;./LIB_Display.h: 88:             PORTD = 0x47;
  1477  00FB  3047               	movlw	71
  1478  00FC  0088               	movwf	8	;volatile
  1479                           
  1480                           ;./LIB_Display.h: 89:             break;
  1481  00FD  2965               	goto	i1l111
  1482  00FE                     i1l1069:
  1483  00FE  0872               	movf	Display@num,w
  1484  00FF  00F0               	movwf	??_Display
  1485  0100  01F1               	clrf	??_Display+1
  1486                           
  1487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1488                           ; Switch size 1, requested type "simple"
  1489                           ; Number of cases is 1, Range of values is 0 to 0
  1490                           ; switch strategies available:
  1491                           ; Name         Instructions Cycles
  1492                           ; simple_byte            4     3 (average)
  1493                           ; direct_byte           11     8 (fixed)
  1494                           ; jumptable            260     6 (fixed)
  1495                           ;	Chosen strategy is simple_byte
  1496  0101  0871               	movf	??_Display+1,w
  1497  0102  3A00               	xorlw	0	; case 0
  1498  0103  1903               	skipnz
  1499  0104  2906               	goto	i1l1239
  1500  0105  28D1               	goto	i1l1003
  1501  0106                     i1l1239:
  1502                           
  1503                           ; Switch size 1, requested type "simple"
  1504                           ; Number of cases is 31, Range of values is 0 to 240
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte           94    48 (average)
  1508                           ; jumptable            260     6 (fixed)
  1509                           ;	Chosen strategy is simple_byte
  1510  0106  0870               	movf	??_Display,w
  1511  0107  3A00               	xorlw	0	; case 0
  1512  0108  1903               	skipnz
  1513  0109  28D1               	goto	i1l1003
  1514  010A  3A01               	xorlw	1	; case 1
  1515  010B  1903               	skipnz
  1516  010C  28D4               	goto	i1l1005
  1517  010D  3A03               	xorlw	3	; case 2
  1518  010E  1903               	skipnz
  1519  010F  28D7               	goto	i1l1007
  1520  0110  3A01               	xorlw	1	; case 3
  1521  0111  1903               	skipnz
  1522  0112  28DA               	goto	i1l1009
  1523  0113  3A07               	xorlw	7	; case 4
  1524  0114  1903               	skipnz
  1525  0115  28DD               	goto	i1l1011
  1526  0116  3A01               	xorlw	1	; case 5
  1527  0117  1903               	skipnz
  1528  0118  28E0               	goto	i1l1013
  1529  0119  3A03               	xorlw	3	; case 6
  1530  011A  1903               	skipnz
  1531  011B  28E3               	goto	i1l1015
  1532  011C  3A01               	xorlw	1	; case 7
  1533  011D  1903               	skipnz
  1534  011E  28E6               	goto	i1l1017
  1535  011F  3A0F               	xorlw	15	; case 8
  1536  0120  1903               	skipnz
  1537  0121  28E9               	goto	i1l1019
  1538  0122  3A01               	xorlw	1	; case 9
  1539  0123  1903               	skipnz
  1540  0124  28EC               	goto	i1l1021
  1541  0125  3A03               	xorlw	3	; case 10
  1542  0126  1903               	skipnz
  1543  0127  28EF               	goto	i1l1023
  1544  0128  3A01               	xorlw	1	; case 11
  1545  0129  1903               	skipnz
  1546  012A  28F2               	goto	i1l1025
  1547  012B  3A07               	xorlw	7	; case 12
  1548  012C  1903               	skipnz
  1549  012D  28F5               	goto	i1l1027
  1550  012E  3A01               	xorlw	1	; case 13
  1551  012F  1903               	skipnz
  1552  0130  28F8               	goto	i1l1029
  1553  0131  3A03               	xorlw	3	; case 14
  1554  0132  1903               	skipnz
  1555  0133  28DA               	goto	i1l1009
  1556  0134  3A01               	xorlw	1	; case 15
  1557  0135  1903               	skipnz
  1558  0136  28FB               	goto	i1l1033
  1559  0137  3A1F               	xorlw	31	; case 16
  1560  0138  1903               	skipnz
  1561  0139  28E9               	goto	i1l1019
  1562  013A  3A30               	xorlw	48	; case 32
  1563  013B  1903               	skipnz
  1564  013C  28DD               	goto	i1l1011
  1565  013D  3A10               	xorlw	16	; case 48
  1566  013E  1903               	skipnz
  1567  013F  28F5               	goto	i1l1027
  1568  0140  3A70               	xorlw	112	; case 64
  1569  0141  1903               	skipnz
  1570  0142  28D7               	goto	i1l1007
  1571  0143  3A10               	xorlw	16	; case 80
  1572  0144  1903               	skipnz
  1573  0145  28EF               	goto	i1l1023
  1574  0146  3A30               	xorlw	48	; case 96
  1575  0147  1903               	skipnz
  1576  0148  28E3               	goto	i1l1015
  1577  0149  3A10               	xorlw	16	; case 112
  1578  014A  1903               	skipnz
  1579  014B  28DA               	goto	i1l1009
  1580  014C  3AF0               	xorlw	240	; case 128
  1581  014D  1903               	skipnz
  1582  014E  28D4               	goto	i1l1005
  1583  014F  3A10               	xorlw	16	; case 144
  1584  0150  1903               	skipnz
  1585  0151  28EC               	goto	i1l1021
  1586  0152  3A30               	xorlw	48	; case 160
  1587  0153  1903               	skipnz
  1588  0154  28E0               	goto	i1l1013
  1589  0155  3A10               	xorlw	16	; case 176
  1590  0156  1903               	skipnz
  1591  0157  28F8               	goto	i1l1029
  1592  0158  3A70               	xorlw	112	; case 192
  1593  0159  1903               	skipnz
  1594  015A  28DA               	goto	i1l1009
  1595  015B  3A10               	xorlw	16	; case 208
  1596  015C  1903               	skipnz
  1597  015D  28F2               	goto	i1l1025
  1598  015E  3A30               	xorlw	48	; case 224
  1599  015F  1903               	skipnz
  1600  0160  28E6               	goto	i1l1017
  1601  0161  3A10               	xorlw	16	; case 240
  1602  0162  1903               	skipnz
  1603  0163  28FB               	goto	i1l1033
  1604  0164  28D1               	goto	i1l1003
  1605  0165                     i1l111:
  1606  0165  0008               	return
  1607  0166                     __end_of_Display:
  1608                           
  1609                           	psect	text10
  1610  01FE                     __ptext10:	
  1611 ;; *************** function _ADC_READ *****************
  1612 ;; Defined at:
  1613 ;;		line 45 in file "./LIB_ADC.h"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  canal           2    0[COMMON] unsigned short 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2    0[COMMON] unsigned int 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         2       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         2       0       0       0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_isr
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _ADC_READ
  1642  01FE                     _ADC_READ:
  1643  01FE                     i1l1077:	
  1644                           ;incstack = 0
  1645                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
  1646                           
  1647                           
  1648                           ;./LIB_ADC.h: 46:     switch (canal) {
  1649  01FE  2A04               	goto	i1l1083
  1650  01FF                     i1l1079:
  1651                           
  1652                           ;./LIB_ADC.h: 48:             ADCON0 = 0b01100001;
  1653  01FF  3061               	movlw	97
  1654  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0202  009F               	movwf	31	;volatile
  1657                           
  1658                           ;./LIB_ADC.h: 49:             break;
  1659  0203  2A0E               	goto	i1l71
  1660  0204                     i1l1083:
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ; direct_byte           11     8 (fixed)
  1669                           ; jumptable            260     6 (fixed)
  1670                           ;	Chosen strategy is simple_byte
  1671  0204  0871               	movf	ADC_READ@canal+1,w
  1672  0205  3A00               	xorlw	0	; case 0
  1673  0206  1903               	skipnz
  1674  0207  2A09               	goto	i1l1241
  1675  0208  2A0E               	goto	i1l71
  1676  0209                     i1l1241:
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 1, Range of values is 8 to 8
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte            4     3 (average)
  1683                           ; direct_byte           14    11 (fixed)
  1684                           ; jumptable            263     9 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686  0209  0870               	movf	ADC_READ@canal,w
  1687  020A  3A08               	xorlw	8	; case 8
  1688  020B  1903               	skipnz
  1689  020C  29FF               	goto	i1l1079
  1690  020D  2A0E               	goto	i1l71
  1691  020E                     i1l71:
  1692  020E  0008               	return
  1693  020F                     __end_of_ADC_READ:
  1694  007E                     btemp	set	126	;btemp
  1695  007E                     wtemp0	set	126
  1696                           
  1697                           	psect	config
  1698                           
  1699                           ;Config register CONFIG1 @ 0x2007
  1700                           ;	Oscillator Selection bits
  1701                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1702                           ;	Watchdog Timer Enable bit
  1703                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1704                           ;	Power-up Timer Enable bit
  1705                           ;	PWRTE = OFF, PWRT disabled
  1706                           ;	RE3/MCLR pin function select bit
  1707                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1708                           ;	Code Protection bit
  1709                           ;	CP = OFF, Program memory code protection is disabled
  1710                           ;	Data Code Protection bit
  1711                           ;	CPD = OFF, Data memory code protection is disabled
  1712                           ;	Brown Out Reset Selection bits
  1713                           ;	BOREN = OFF, BOR disabled
  1714                           ;	Internal External Switchover bit
  1715                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1716                           ;	Fail-Safe Clock Monitor Enabled bit
  1717                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1718                           ;	Low Voltage Programming Enable bit
  1719                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1720                           ;	In-Circuit Debugger Mode bit
  1721                           ;	DEBUG = 0x1, unprogrammed default
  1722  2007                     	org	8199
  1723  2007  20D4               	dw	8404
  1724                           
  1725                           ;Config register CONFIG2 @ 0x2008
  1726                           ;	Brown-out Reset Selection bit
  1727                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1728                           ;	Flash Program Memory Self Write Enable bits
  1729                           ;	WRT = OFF, Write protection off
  1730  2008                     	org	8200
  1731  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _Display_->_Display

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _ADC_INIT
                      _ADC_INTERRUPT
                   _CONFIG_INTERRUPT
                          _CONFIG_IO
                         _separacion
                             _toggle
 ---------------------------------------------------------------------------------
 (1) _toggle                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _separacion                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INTERRUPT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0     120
                                              3 COMMON     6     6      0
                           _ADC_READ
                           _Display_
 ---------------------------------------------------------------------------------
 (3) _Display_                                             0     0      0      22
                            _Display
 ---------------------------------------------------------------------------------
 (4) _Display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_READ                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_INIT
   _ADC_INTERRUPT
   _CONFIG_INTERRUPT
   _CONFIG_IO
   _separacion
   _toggle

 _isr (ROOT)
   _ADC_READ
   _Display_
     _Display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 19:58:09 2021

                       l65 0235                         l74 0231                        l153 01FD  
                      l171 021D                        l156 022A                        l168 01EA  
                      u300 01AF                        u301 01AE                        u305 01AB  
                      u180 01DD                        u181 01DC                        u190 01E6  
                      u191 01E5                        u280 0189                        u281 0188  
                      u290 01A3                        u291 01A2                        u285 0185  
                      u295 019F                        _isr 0023                        fsr0 0004  
         _CONFIG_INTERRUPT 021E         __size_of_CONFIG_IO 0013                       l1111 01F1  
                     l1121 01FA                       l1113 01F2                       l1105 01EB  
                     l1123 01FB                       l1115 01F5                       l1107 01EE  
                     l1131 01DD                       l1125 01FC                       l1117 01F6  
                     l1109 01F0                       l1133 01E0                       l1127 021E  
                     l1119 01F9                       l1135 01E6                       l1137 020F  
                     l1129 01D7                       l1075 0232                       l1181 0175  
                     l1191 0197                       l1183 017A                       l1089 022B  
                     l1193 01A3                       l1185 0189                       l1177 0166  
                     l1195 01A5                       l1187 018D                       l1179 0170  
                     l1197 01AF                       l1189 0192                       ?_isr 0070  
                     _IOCB 0096                       i1l71 020E                       _TMR0 0001  
   __size_of_ADC_INTERRUPT 0007           __end_of_ADC_INIT 0236           __end_of_ADC_READ 020F  
                     _cont 0024                       _main 0166                       btemp 007E  
                     start 000E            __end_of_Display 0166                      ??_isr 0073  
                    ?_main 0070                      _ANSEL 0188                      i1l111 0165  
                    i1l133 00B3                      i1l162 01D6                      i1l138 00C0  
                    u20_20 0027                      u20_21 0026                      u21_20 002E  
                    u21_21 002D                      u22_20 0041                      u22_21 0040  
                    u23_20 005C                      u23_21 005B                      u31_27 0034  
                    u16_20 01BD                      u24_20 006F                      u16_21 01BC  
                    u24_21 006E                      u32_27 004F                      u17_20 01CD  
                    u25_20 008A                      u17_21 01CC                      u25_21 0089  
                    u33_27 0062                      u26_20 00B3                      u26_21 00B2  
                    u34_27 007D                      u27_20 00B7                      u27_21 00B6  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u35_27 0098  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 0011          __end_of_CONFIG_IO 01FE  
         __end_of_Display_ 01D7               __end_of_main 01B4              _ADC_INTERRUPT 022B  
                   ??_main 0000                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ANSELH 0189                     i1l1001 00CA  
                   i1l1011 00DD                     i1l1003 00D1                     i1l1021 00EC  
                   i1l1013 00E0                     i1l1005 00D4                     i1l1101 01CD  
                   i1l1023 00EF                     i1l1015 00E3                     i1l1007 00D7  
                   i1l1103 01D3                     i1l1033 00FB                     i1l1025 00F2  
                   i1l1017 00E6                     i1l1009 00DA                     i1l1027 00F5  
                   i1l1019 00E9                     i1l1029 00F8                     i1l1141 0027  
                   i1l1151 005C                     i1l1143 002E                     i1l1241 0209  
                   i1l1161 008B                     i1l1153 0069                     i1l1145 003B  
                   i1l1083 0204                     i1l1091 01B4                     i1l1171 00AD  
                   i1l1163 0094                     i1l1155 006F                     i1l1147 0041  
                   i1l1139 0023                     i1l1077 01FE                     i1l1069 00FE  
                   i1l1093 01B7                     i1l1173 00B7                     i1l1165 009D  
                   i1l1149 0056                     i1l1157 0084                     i1l1079 01FF  
                   i1l1239 0106                     i1l1095 01BD                     i1l1175 00B8  
                   i1l1167 00A1                     i1l1159 008A                     i1l1097 01C3  
                   i1l1169 00A8                     i1l1099 01C7                     _INTCON 000B  
                   _TMR0IF 005A                  ??_Display 0070             ?_ADC_INTERRUPT 0070  
                   _toggle 01D7                  ?_ADC_INIT 0070                  ?_ADC_READ 0070  
                   saved_w 007E    __end_of__initialization 001F   __end_of_CONFIG_INTERRUPT 022B  
           __pcstackCOMMON 0070                 ??_ADC_INIT 0000                 ??_ADC_READ 0072  
                ?_Display_ 0070                 __pbssBANK0 0020                 __pmaintext 0166  
          ??_ADC_INTERRUPT 0000                 __pintentry 0004                    ?_toggle 0070  
               ??_Display_ 0073                    _Display 00C9                  _CONFIG_IO 01EB  
                  __ptext1 01D7                    __ptext2 020F                    __ptext3 01EB  
                  __ptext4 021E                    __ptext5 022B                    __ptext6 0232  
                  __ptext7 0023                    __ptext8 01B4                    __ptext9 00C9  
          __size_of_toggle 0014                    _mas_sig 0022               __size_of_isr 00A6  
     end_of_initialization 001F                 _separacion 020F                 ?_CONFIG_IO 0070  
                _PORTBbits 0006                  _PORTEbits 0009          __size_of_ADC_INIT 0004  
        __size_of_ADC_READ 0011          ?_CONFIG_INTERRUPT 0070         ??_CONFIG_INTERRUPT 0000  
           __end_of_toggle 01EB        start_initialization 0011              ADC_READ@canal 0070  
              __end_of_isr 00C9          __size_of_Display_ 0023                ?_separacion 0070  
              ??_CONFIG_IO 0000                   ??_toggle 0000                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0000                   ?_Display 0070  
    __end_of_ADC_INTERRUPT 0232                   _BANDERAS 0079                   _ADC_INIT 0232  
                 _ADC_READ 01FE        __size_of_separacion 000F                  _menos_sig 0020  
        interrupt_function 0004                   _PIE1bits 008C                   _PIR1bits 000C  
               _ADCON0bits 001F                   _Display_ 01B4           __size_of_Display 009D  
__size_of_CONFIG_INTERRUPT 000D                   __ptext10 01FE                   _contador 007B  
            __size_of_main 004E               ??_separacion 0000                 _INTCONbits 000B  
       __end_of_separacion 021E                   intlevel1 0000                 _OPTION_REG 0081  
              _result_adc1 0026                 Display@num 0072  
